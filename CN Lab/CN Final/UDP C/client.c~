#include<stdio.h>
#include<string.h> 
#include<stdlib.h> 
#include<arpa/inet.h>
#include<sys/socket.h>

#define SERVER "127.0.0.1"
#define BUFLEN 503
#define PORT 8885

void die(char *s)
{
	perror(s);
	exit(1);
}
int main(void)
{
	struct sockaddr_in si_other;
	int s, i, slen=sizeof(si_other);
	char buf[BUFLEN];
	char message[BUFLEN];

	if ( (s=socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP)) == -1)
	{
		die("socket");
	}

	memset((char *) &si_other, 0, sizeof(si_other));
	si_other.sin_family = AF_INET;
	si_other.sin_port = htons(PORT);
	
	if (inet_aton(SERVER , &si_other.sin_addr) == 0)//returns non-zero if the address is a valid one, and it returns zero if the address is invalid.converting from a dots-and-numbers string into a in_addr_t (which is the type of the field s_addr in your struct in_addr.)
	{
		fprintf(stderr, "inet_aton() failed\n");//stderr: standard error stream is the default destination for error messages and other diagnostic warnings. 
		exit(1);
	}
	//memset(message,0,503);
	char fname[20],data[200];
	printf("Enter Filename with extension: ");
	scanf("%s",fname);
	sendto(s, fname, 20 , 0 , (struct sockaddr *) &si_other, slen);//0 is because 0 number of flags are affected
	recvfrom(s, data, sizeof(data), 0, NULL,NULL);
	printf("====>\n%s\n",data);
	
	close(s);
	
	return 0;
}

